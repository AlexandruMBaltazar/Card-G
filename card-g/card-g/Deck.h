#pragma once
#include <vector>
#include "Card.h"

/*
 *Our Deck will be implemented as a singleton
 *We are going to have a single deck throughout the whole game 
 */
class Deck
{
private:
	static Deck* instance;
	
	//This is our deck
	std::vector<Card*> deck;
private:
	Deck()
	{
		
	}
public:
	static Deck* getInstance()
	{
		if (instance == nullptr)
		{
			instance = new Deck();
		}

		return instance;
	}

	//This method is used to populate our deck with the cards generated by our factory
	void populateDeck(std::vector<Card*> cards);
	
	std::vector<Card*>& getDeck();
	Card* getCard(int index);

	//This method is used to display on screen the contents of the deck
	void displayDeck();
	virtual ~Deck();
};

